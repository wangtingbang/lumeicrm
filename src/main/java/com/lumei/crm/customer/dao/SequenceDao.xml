<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
<mapper namespace="com.lumei.crm.customer.dao.SequenceDao">
	<resultMap id="BaseResultMap" type="com.lumei.crm.customer.entity.TSequence">
		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		<id column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="CURRENT_VALUE" property="currentValue" jdbcType="INTEGER" />
		<result column="INCREMENT" property="increment" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		NAME,
		CURRENT_VALUE,
		INCREMENT
	</sql>

	<sql id="Example_Where_Clause">
		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		<where>
			<trim prefix="(" suffix=")">
			<foreach collection="params" item="criteria" separator="or">
				<trim prefix="(" suffix=")" prefixOverrides="and">
					<foreach collection="criteria.criteria.values" item="v" separator="and">
						<choose>
							<when test="v.iseq">
                <![CDATA[ ${v.colunm } = #{v.value } ]]>
							</when>
							<when test="v.noteq">
                <![CDATA[ ${v.colunm } <> #{v.value } ]]>
							</when>
							<when test="v.like">
                <![CDATA[ ${v.colunm } like CONCAT('%',#{v.value },'%') ]]>
							</when>
							<when test="v.notlike">
                <![CDATA[ ${v.colunm } not like CONCAT('%',#{v.value },'%') ]]>
							</when>
							<when test="v.islt">
                <![CDATA[ ${v.colunm } < #{v.value } ]]>
							</when>
							<when test="v.isgt">
                <![CDATA[ ${v.colunm } > #{v.value } ]]>
							</when>
							<when test="v.isle">
                <![CDATA[ ${v.colunm } <= #{v.value } ]]>
							</when>
							<when test="v.isge">
                <![CDATA[ ${v.colunm } >= #{v.value } ]]>
							</when>
							<when test="v.between">
                <![CDATA[ ${v.colunm } between #{v.value } and #{v.secondValue } ]]>
							</when>
							<when test="v.notbetween">
                <![CDATA[ ${v.colunm } not between #{v.value } and #{v.secondValue } ]]>
							</when>
							<when test="v.isin">
				<![CDATA[ ${v.colunm } in ]]>
								<foreach collection="v.value" item="listItem" open="(" close=")" separator=",">
				                  <![CDATA[ #{listItem } ]]>
								</foreach>
							</when>
							<when test="v.notin">
				<![CDATA[ ${v.colunm } not in ]]>
								<foreach collection="v.value" item="listItem" open="(" close=")" separator=",">
				                  <![CDATA[ #{listItem } ]]>
								</foreach>
							</when>
							<when test="v.isnull">
				<![CDATA[ ${v.colunm } is null ]]>
							</when>
							<when test="v.notnull">
				<![CDATA[ ${v.colunm } is not null ]]>
							</when>
						</choose>
					</foreach>
				</trim>
			</foreach>
			</trim>
		</where>
	</sql>
	
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map">
		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from SEQUENCE
		<include refid="Example_Where_Clause" />
		<trim prefix="order by">
			<foreach collection="order" item="o" separator=",">
				<![CDATA[ ${o.column } ]]>
			<choose>
				<when test="o.desc">
					desc
				</when>
				<otherwise>
					asc
				</otherwise>
			</choose>
			</foreach>
		</trim>
	</select>

  	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.lumei.crm.customer.entity.TSequence" >
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		select
		<include refid="Base_Column_List" />
		from SEQUENCE
		where NAME = #{name,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="com.lumei.crm.customer.entity.TSequence">
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		delete from SEQUENCE
		where NAME = #{name,jdbcType=VARCHAR}
	</delete>
	
	<insert id="insert" parameterType="com.lumei.crm.customer.entity.TSequence">
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		insert into SEQUENCE (
		<include refid="Base_Column_List" />
		)
		values (
			#{name,jdbcType=VARCHAR},
			#{currentValue,jdbcType=INTEGER},
			#{increment,jdbcType=INTEGER}
		)
	</insert>

	<insert id="insertSelective" parameterType="com.lumei.crm.customer.entity.TSequence">
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		insert into SEQUENCE
		<trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="name != null">
			NAME,
		</if>
		<if test="currentValue != null">
			CURRENT_VALUE,
		</if>
		<if test="increment != null">
			INCREMENT
		</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="name != null">
				#{name,jdbcType=VARCHAR},
		</if>
		<if test="currentValue != null">
				#{currentValue,jdbcType=INTEGER},
		</if>
		<if test="increment != null">
				#{increment,jdbcType=INTEGER}
		</if>
		</trim>
	</insert>

	<select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer" >
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		select count(*) from SEQUENCE
		<include refid="Example_Where_Clause" />
	</select>

	<update id="updateByPrimaryKeySelective" parameterType="com.lumei.crm.customer.entity.TSequence" >
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		update SEQUENCE
		<set>
	<if test="name != null" >
		NAME = #{name,jdbcType=VARCHAR},
	</if>
	<if test="currentValue != null" >
		CURRENT_VALUE = #{currentValue,jdbcType=INTEGER},
	</if>
	<if test="increment != null" >
		INCREMENT = #{increment,jdbcType=INTEGER}
	</if>
		</set>
		where NAME = #{name,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.lumei.crm.customer.entity.TSequence" >
  		<!-- generated by Code Generator v0.1 Sat Aug 20 11:58:51 CST 2016 -->
		update SEQUENCE
		<set>
		NAME = #{name,jdbcType=VARCHAR},
		CURRENT_VALUE = #{currentValue,jdbcType=INTEGER},
		INCREMENT = #{increment,jdbcType=INTEGER}
		</set>
		where NAME = #{name,jdbcType=VARCHAR}
	</update>

</mapper>